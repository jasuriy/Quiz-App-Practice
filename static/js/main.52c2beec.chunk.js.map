{"version":3,"sources":["QuizData.js","Quiz.jsx","index.js"],"names":["QuizData","id","question","options","answer","Quiz","props","loadQuiz","currentIndex","state","setState","nextQuestonHandler","userAnswer","score","checkAnswer","disabled","finishHandler","length","quizEnd","this","prevProps","prevState","map","item","index","className","key","option","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAaA,EAAW,CACtB,CACEC,GAAI,EACJC,SAAS,oCACTC,QAAS,CAAC,WAAD,4BACTC,OAAO,WAET,CACEH,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,SAAD,6BACTC,OAAO,aAET,CACEH,GAAI,EACJC,SAAS,oCACTC,QAAS,CAAC,SAAD,0BACTC,OAAO,UAET,CACEH,GAAI,EACJC,SAAS,iCACTC,QAAS,CAAC,YAAD,6BACTC,OAAO,UAET,CACEH,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,SAAD,gCACTC,OAAO,aC2FIC,G,wDApHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,SAAW,WAAO,IACRC,EAAiB,EAAKC,MAAtBD,aACR,EAAKE,UAAS,WACZ,MAAO,CACLR,SAAUF,EAASQ,GAAcN,SACjCC,QAASH,EAASQ,GAAcL,QAChCC,OAAQJ,EAASQ,GAAcJ,YAjBlB,EAqBnBO,mBAAqB,WAAO,IAAD,EACa,EAAKF,MAAnCG,EADiB,EACjBA,WAAYR,EADK,EACLA,OAAQS,EADH,EACGA,MACxBD,IAAeR,GACjB,EAAKM,SAAS,CACZG,MAAOA,EAAQ,IAGnB,EAAKH,SAAS,CACZF,aAAc,EAAKC,MAAMD,aAAe,EACxCI,WAAY,QA9BG,EAiCnBE,YAAc,SAACV,GACb,EAAKM,SAAS,CACZK,UAAU,EACVH,WAAYR,KApCG,EAuDnBY,cAAgB,WACV,EAAKP,MAAMD,eAAiBR,EAASiB,OAAS,GAChD,EAAKP,SAAS,CACZQ,SAAS,KAxDb,EAAKT,MAAQ,CACXG,WAAY,KACZJ,aAAc,EACdL,QAAS,GACTe,SAAS,EACTL,MAAO,EACPE,UAAU,GARK,E,gEAwCjBI,KAAKZ,a,yCAGYa,EAAWC,GAAY,IAChCb,EAAiBW,KAAKV,MAAtBD,aACJW,KAAKV,MAAMD,cAAgBa,EAAUb,cACvCW,KAAKT,UAAS,WACZ,MAAO,CACLR,SAAUF,EAASQ,GAAcN,SACjCC,QAASH,EAASQ,GAAcL,QAChCC,OAAQJ,EAASQ,GAAcJ,a,+BAY7B,IAAD,SAC0De,KAAKV,MAA9DP,EADD,EACCA,SAAUC,EADX,EACWA,QAASK,EADpB,EACoBA,aAAcI,EADlC,EACkCA,WACzC,OAFO,EAC8CM,QAGjD,6BACE,wDAA8BC,KAAKV,MAAMI,MAAzC,WACA,mDACA,4BACGb,EAASsB,KAAI,SAACC,EAAMC,GAAP,OACZ,wBAAIC,UAAU,UAAUC,IAAKF,GAC1BD,EAAKnB,aAQhB,6BACE,4BAAKF,GACL,0CACYM,EAAe,EAD3B,OACkCR,EAASiB,OACxCd,EAAQmB,KAAI,SAACK,GAAD,OACX,uBACEF,UAAWb,IAAee,EAAS,WAAa,UAChDC,QAAS,kBAAM,EAAKd,YAAYa,KAE/BA,MAGJnB,EAAeR,EAASiB,OAAS,GAChC,4BACEF,SAAUI,KAAKV,MAAMM,SACrBU,UAAW,aACXG,QAAST,KAAKR,oBAHhB,iBAQDH,IAAiBR,EAASiB,OAAS,GAClC,4BACEQ,UAAW,aACXG,QAAST,KAAKH,cACdD,SAAUI,KAAKV,MAAMM,UAHvB,gB,GAvGOc,cCCnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.52c2beec.chunk.js","sourcesContent":["export const QuizData = [\r\n  {\r\n    id: 0,\r\n    question: `What is the capital of the World?`,\r\n    options: [`New York`, `Andijan`, `Tokio`, `London`],\r\n    answer: `Andijan`,\r\n  },\r\n  {\r\n    id: 1,\r\n    question: `What is the capital of India?`,\r\n    options: [`Punjab`, `Awka`, `Owerri`, `New Delhi`],\r\n    answer: `New Delhi`,\r\n  },\r\n  {\r\n    id: 2,\r\n    question: `What is the capital of Australia?`,\r\n    options: [`Mumbai`, `Abuja`, `Warri`, `Sydney`],\r\n    answer: `Sydney`,\r\n  },\r\n  {\r\n    id: 3,\r\n    question: `What is the capital of Turkey?`,\r\n    options: [`Bangalore`, `Ankara`, `Istanbul`, `Enugu`],\r\n    answer: `Ankara`,\r\n  },\r\n  {\r\n    id: 4,\r\n    question: `What is the capital of Syria?`,\r\n    options: [`Rimadi`, `Damascus`, `Owerri`, `Tel Aviv`],\r\n    answer: `Damascus`,\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { QuizData } from \"./QuizData\";\r\nimport \"./styles.css\";\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAnswer: null,\r\n      currentIndex: 0,\r\n      options: [],\r\n      quizEnd: false,\r\n      score: 0,\r\n      disabled: true,\r\n    };\r\n  }\r\n  loadQuiz = () => {\r\n    const { currentIndex } = this.state;\r\n    this.setState(() => {\r\n      return {\r\n        question: QuizData[currentIndex].question,\r\n        options: QuizData[currentIndex].options,\r\n        answer: QuizData[currentIndex].answer,\r\n      };\r\n    });\r\n  };\r\n  nextQuestonHandler = () => {\r\n    const { userAnswer, answer, score } = this.state;\r\n    if (userAnswer === answer) {\r\n      this.setState({\r\n        score: score + 1,\r\n      });\r\n    }\r\n    this.setState({\r\n      currentIndex: this.state.currentIndex + 1,\r\n      userAnswer: null,\r\n    });\r\n  };\r\n  checkAnswer = (answer) => {\r\n    this.setState({\r\n      disabled: false,\r\n      userAnswer: answer,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.loadQuiz();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { currentIndex } = this.state;\r\n    if (this.state.currentIndex != prevState.currentIndex) {\r\n      this.setState(() => {\r\n        return {\r\n          question: QuizData[currentIndex].question,\r\n          options: QuizData[currentIndex].options,\r\n          answer: QuizData[currentIndex].answer,\r\n        };\r\n      });\r\n    }\r\n  }\r\n  finishHandler = () => {\r\n    if (this.state.currentIndex === QuizData.length - 1) {\r\n      this.setState({\r\n        quizEnd: true,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { question, options, currentIndex, userAnswer, quizEnd } = this.state;\r\n    if (quizEnd) {\r\n      return (\r\n        <div>\r\n          <h1>Quiz ended. Final score: {this.state.score} points</h1>\r\n          <p>The correct answers:</p>\r\n          <ul>\r\n            {QuizData.map((item, index) => (\r\n              <li className=\"options\" key={index}>\r\n                {item.answer}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>{question}</h2>\r\n        <span>\r\n          Question {currentIndex + 1} of {QuizData.length}\r\n          {options.map((option) => (\r\n            <p\r\n              className={userAnswer === option ? \"selected\" : \"options\"}\r\n              onClick={() => this.checkAnswer(option)}\r\n            >\r\n              {option}\r\n            </p>\r\n          ))}\r\n          {currentIndex < QuizData.length - 1 && (\r\n            <button\r\n              disabled={this.state.disabled}\r\n              className={\"optionsbtn\"}\r\n              onClick={this.nextQuestonHandler}\r\n            >\r\n              Next Question\r\n            </button>\r\n          )}\r\n          {currentIndex === QuizData.length - 1 && (\r\n            <button\r\n              className={\"optionsbtn\"}\r\n              onClick={this.finishHandler}\r\n              disabled={this.state.disabled}\r\n            >\r\n              Finish\r\n            </button>\r\n          )}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Quiz from \"./Quiz\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Quiz />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}